[project]
name = "doug-lightning-hydra-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "hydra-colorlog>=1.2.0",
    "hydra-core>=1.3.2",
    "hydra-optuna-sweeper>=1.2.0",
    "lightning>=2.5.3",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "rich>=14.1.0",
    "rootutils>=1.0.7",
    "sh>=2.2.2",
    "torch>=2.8.0",
    "torchmetrics>=1.8.1",
    "torchvision>=0.23.0",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
# Exclude common directories that don't need linting
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    ".tox",
    "venv",
    "migrations",  # Django migrations
    ".mypy_cache",
    ".pytest_cache",
]

# Same line length as Black
line-length = 88

# Python version to target
target-version = "py313"  # Adjust to your minimum Python version

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "ISC",    # flake8-implicit-str-concat
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "TID",    # flake8-tidy-imports
    "PTH",    # flake8-use-pathlib
    "PL",     # Pylint
    "RUF",    # Ruff-specific rules
    "NPY",    # NumPy-specific rules
    "PD",     # pandas-vet
    "PERF",   # Performance linting
    "FURB",   # refurb (modernization suggestions)
    "LOG",    # flake8-logging
]

ignore = [
    "E501",   # Line too long (handled by formatter)
    "PLR0913", # Too many arguments
    "PLR0912", # Too many branches
    "PLR2004", # Magic value comparison
    "SIM108",  # Use ternary operator (sometimes less readable)
    "RET504",  # Unnecessary variable assignment before return
    "N818",    # Exception name should be Error
    "N812",    # Import lowercase as uppercase
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
# Ignore certain rules in specific files
"tests/*" = [
    "S101",   # Use of assert
    "PLR2004", # Magic values in tests are ok
]
"__init__.py" = ["F401"]  # Unused imports in __init__ files

[tool.ruff.lint.isort]
known-first-party = ["your_package_name"]  # Replace with your package
combine-as-imports = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Unix-style line endings
line-ending = "auto"
